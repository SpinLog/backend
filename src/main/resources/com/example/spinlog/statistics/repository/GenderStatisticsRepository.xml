<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.spinlog.statistics.repository.GenderStatisticsRepository">
    <select id="getAmountAveragesEachGenderAndEmotionBetweenStartDateAndEndDate" resultType="GenderEmotionAmountAverageDto">
        select u.gender, a.emotion, round(avg(a.amount), -3) as amountAverage
        from articles a join users u on(a.user_id = u.user_id)
        where a.register_type = #{registerType} and a.spend_date <![CDATA[>=]]> #{startDate} and a.spend_date <![CDATA[<]]> #{endDate}
        group by u.gender, a.emotion
    </select>

    <select id="getAmountSumsEachGenderAndDayBetweenStartDateAndEndDate" resultType="GenderDailyAmountSumDto">
        select u.gender, date(a.spend_date) as localDate, sum(a.amount) as amountSum
        from articles a join users u on(a.user_id = u.user_id)
        where a.register_type = #{registerType} and a.spend_date <![CDATA[>=]]> #{startDate} and a.spend_date <![CDATA[<]]> #{endDate}
        group by u.gender, localDate
    </select>

    <select id="getAllMemosByGenderBetweenStartDateAndEndDate" resultType="MemoDto">
        select a.content, a.event, a.thought, a.reason, a.improvements
        from articles a join users u on(a.user_id = u.user_id)
        where a.register_type = #{registerType} and a.spend_date <![CDATA[>=]]> #{startDate} and a.spend_date <![CDATA[<]]> #{endDate} and u.gender = #{gender}
    </select>

    <select id="getSatisfactionAveragesEachGenderBetweenStartDateAndEndDate" resultType="GenderSatisfactionAverageDto">
        select u.gender, round(avg(a.satisfaction), 1) as satisfactionAverage
        from articles a join users u on(a.user_id = u.user_id)
        where a.register_type = #{registerType} and a.spend_date <![CDATA[>=]]> #{startDate} and a.spend_date <![CDATA[<]]> #{endDate}
        group by u.gender
    </select>

    <!--  -->

    <select id="getAmountSumsAndCountsEachGenderAndEmotionBetweenStartDateAndEndDate" resultType="GenderEmotionAmountSumAndCountDto">
        select u.gender, a.emotion, sum(a.amount) as amountSum, count(a.amount) as amountCount
        from articles a join users u on(a.user_id = u.user_id)
        where a.register_type = #{registerType} and a.spend_date <![CDATA[>=]]> #{startDate} and a.spend_date <![CDATA[<]]> #{endDate}
        group by u.gender, a.emotion
    </select>

    <select id="getSatisfactionSumsAndCountsEachGenderBetweenStartDateAndEndDate" resultType="GenderSatisfactionSumAndCountDto">
        select u.gender, sum(a.satisfaction) as satisfactionSum, count(a.satisfaction) as satisfactionCount
        from articles a join users u on(a.user_id = u.user_id)
        where a.register_type = #{registerType} and a.spend_date <![CDATA[>=]]> #{startDate} and a.spend_date <![CDATA[<]]> #{endDate}
        group by u.gender
    </select>

    <!--  -->

    <select id="getAmountSumsEachEmotionByUserIdBetweenStartDateAndEndDate" resultType="GenderEmotionAmountAverageDto">
        select u.gender, a.emotion, sum(a.amount) as amountAverage
        from articles a join users u on(a.user_id = u.user_id)
        where u.user_id = #{userId} and a.register_type = #{registerType} and a.spend_date <![CDATA[>=]]> #{startDate} and a.spend_date <![CDATA[<]]> #{endDate}
        group by a.emotion
    </select>

    <select id="getAmountCountsEachEmotionByUserIdBetweenStartDateAndEndDate" resultType="GenderEmotionAmountAverageDto">
        select u.gender, a.emotion, count(a.amount) as amountAverage
        from articles a join users u on(a.user_id = u.user_id)
        where u.user_id = #{userId} and a.register_type = #{registerType} and a.spend_date <![CDATA[>=]]> #{startDate} and a.spend_date <![CDATA[<]]> #{endDate}
        group by a.emotion
    </select>

    <select id="getAmountSumsEachDayByUserIdBetweenStartDateAndEndDate" resultType="GenderDailyAmountSumDto">
        select u.gender, date(a.spend_date) as localDate, sum(a.amount) as amountSum
        from articles a join users u on(a.user_id = u.user_id)
        where u.user_id = #{userId} and a.register_type = #{registerType} and a.spend_date <![CDATA[>=]]> #{startDate} and a.spend_date <![CDATA[<]]> #{endDate}
        group by localDate
    </select>

    <select id="getSatisfactionSumsByUserIdBetweenStartDateAndEndDate" resultType="GenderDataDto">
        select u.gender, sum(a.satisfaction) as satisfactionAverage
        from articles a join users u on(a.user_id = u.user_id)
        where u.user_id = #{userId} and a.register_type = #{registerType} and a.spend_date <![CDATA[>=]]> #{startDate} and a.spend_date <![CDATA[<]]> #{endDate}
        group by u.gender
    </select>

    <select id="getSatisfactionCountsByUserIdBetweenStartDateAndEndDate" resultType="GenderDataDto">
        select u.gender, count(a.satisfaction) as satisfactionAverage
        from articles a join users u on(a.user_id = u.user_id)
        where u.user_id = #{userId} and a.register_type = #{registerType} and a.spend_date <![CDATA[>=]]> #{startDate} and a.spend_date <![CDATA[<]]> #{endDate}
        group by u.gender
    </select>
</mapper>